ln <- ""
d <- ""
w <- function(s) {
cat(s, file = "~/Documents/Business/Real And Present/exported.csv", append=TRUE)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added")
for(l in dat[,1]) {
if(grepl("@", l)) {
w(paste0(fn, ",", ln, ",", l, ",,,,,Medium,", l))
} else if(grepl(",", l)) {
d <- as.Date(l, tryFormats = c("%b %d, %y"))
} else if(nchar(l) > 0) {
p <- unlist(strsplit(l, " "))
fn <- p[1]
ln <- p[2]
}
}
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
w <- function(s) {
cat(s, file = "~/Documents/Business/Real And Present/exported.csv", append=TRUE)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added")
for(l in dat[,1]) {
if(grepl("@", l)) {
w(paste0(fn, ",", ln, ",", l, ",,,,,Medium,", l))
} else if(grepl(",", l)) {
browser()
d <- as.Date(l, tryFormats = c("%b %d, %y"))
} else if(nchar(l) > 0) {
p <- unlist(strsplit(l, " "))
fn <- p[1]
ln <- p[2]
}
}
l
as.Date(l, tryFormats = c("%b %d, %y"))
l
break
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
w <- function(s) {
cat(s, file = "~/Documents/Business/Real And Present/exported.csv", append=TRUE)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added")
for(l in dat[,1]) {
if(grepl("@", l)) {
w(paste0(fn, ",", ln, ",", l, ",,,,,Medium,", l))
} else if(grepl("\w{3,4}\s\d{1,2},", l)) {
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
w <- function(s) {
cat(s, file = "~/Documents/Business/Real And Present/exported.csv", append=TRUE)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added")
for(l in dat[,1]) {
if(grepl("@", l)) {
w(paste0(fn, ",", ln, ",", l, ",,,,,Medium,", l))
} else if(grepl("\\w{3,4}\\s\\d{1,2},", l)) {
print(l)
d <- as.Date(l, tryFormats = c("%b %d, %y"))
} else if(nchar(l) > 0) {
p <- unlist(strsplit(l, " "))
fn <- p[1]
ln <- p[2]
}
}
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
w <- function(s) {
cat(s, file = "~/Documents/Business/Real And Present/exported.csv", append=TRUE)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added")
for(l in dat[,1]) {
if(grepl("@", l)) {
w(paste0(fn, ",", ln, ",", l, ",,,,,Medium,", l))
} else if(grepl("\\w{3,3}\\s\\d{1,2},", l)) {
print(l)
d <- as.Date(l, tryFormats = c("%b %d, %y"))
} else if(nchar(l) > 0) {
p <- unlist(strsplit(l, " "))
fn <- p[1]
ln <- p[2]
}
}
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
w <- function(s, append=TRUE) {
cat(s, file = "~/Documents/Business/Real And Present/exported.csv",
append=append)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added", FALSE)
for(l in dat[,1]) {
if(grepl("@", l)) {
w(paste0(fn, ",", ln, ",", l, ",,,,,Medium,", l))
} else if(grepl("\\w{3,3}\\s\\d{1,2},", l)) {
d <- as.Date(l, tryFormats = c("%b %d, %y"))
} else if(nchar(l) > 0) {
p <- unlist(strsplit(l, " "))
fn <- p[1]
ln <- p[2]
}
}
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
w <- function(s, append=TRUE) {
cat(paste0(s, "\n"), file = "~/Documents/Business/Real And Present/exported.csv",
append=append)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added", FALSE)
for(l in dat[,1]) {
if(grepl("@", l)) {
w(paste0(fn, ",", ln, ",", l, ",,,,,Medium,", l))
} else if(grepl("\\w{3,3}\\s\\d{1,2},", l)) {
d <- as.Date(l, tryFormats = c("%b %d, %y"))
} else if(nchar(l) > 0) {
p <- unlist(strsplit(l, " "))
fn <- p[1]
ln <- p[2]
}
}
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
w <- function(s, append=TRUE) {
cat(paste0(s, "\n"), file = "~/Documents/Business/Real And Present/exported.csv",
append=append)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added", FALSE)
for(l in dat[,1]) {
if(grepl("@", l)) {
w(paste0(fn, ",", ln, ",", l, ",,,,,Medium,", d))
} else if(grepl("\\w{3,3}\\s\\d{1,2},", l)) {
d <- as.Date(l, tryFormats = c("%b %d, %y"))
} else if(nchar(l) > 0) {
p <- unlist(strsplit(l, " "))
fn <- p[1]
ln <- gsub(",.*", "", p[2])
}
}
w(paste0(fn, ",", ln, ",", e, ",,,,,,Medium,", d))
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
e <- ""
w <- function(s, append=TRUE) {
cat(paste0(s, "\n"), file = "~/Documents/Business/Real And Present/exported.csv",
append=append)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added", FALSE)
for(l in dat[,1]) {
if(grepl("@", l)) {
e <- l
} else if(grepl("\\w{3,3}\\s\\d{1,2},", l)) {
d <- as.Date(l, tryFormats = c("%b %d, %y"))
w(paste0(fn, ",", ln, ",", e, ",,,,,,Medium,", d))
} else if(nchar(l) > 0) {
p <- unlist(strsplit(l, " "))
fn <- p[1]
ln <- gsub(",.*", "", p[2])
}
}
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
e <- ""
w <- function(s, append=TRUE) {
cat(paste0(s, "\n"), file = "~/Documents/Business/Real And Present/exported.csv",
append=append)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added", FALSE)
for(l in dat[,1]) {
if(grepl("@", l)) {
e <- l
} else if(grepl("\\w{3,3}\\s\\d{1,2},", l)) {
d <- as.Date(l, tryFormats = c("%b %d, %y"))
w(paste0(fn, ",", ln, ",", e, ",,,,,,Medium,", d))
} else if(nchar(l) > 0) {
p <- unlist(strsplit(gsub(".*{1,4}\\.\s", l, " ")))
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
e <- ""
w <- function(s, append=TRUE) {
cat(paste0(s, "\n"), file = "~/Documents/Business/Real And Present/exported.csv",
append=append)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added", FALSE)
for(l in dat[,1]) {
if(grepl("@", l)) {
e <- l
} else if(grepl("\\w{3,3}\\s\\d{1,2},", l)) {
d <- as.Date(l, tryFormats = c("%b %d, %y"))
w(paste0(fn, ",", ln, ",", e, ",,,,,,Medium,", d))
} else if(nchar(l) > 0) {
p <- unlist(strsplit(gsub(".*{1,4}\\.\\s", l, " ")))
fn <- p[1]
ln <- gsub(",.*", "", p[2])
}
}
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
e <- ""
w <- function(s, append=TRUE) {
cat(paste0(s, "\n"), file = "~/Documents/Business/Real And Present/exported.csv",
append=append)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added", FALSE)
for(l in dat[,1]) {
if(grepl("@", l)) {
e <- l
} else if(grepl("\\w{3,3}\\s\\d{1,2},", l)) {
d <- as.Date(l, tryFormats = c("%b %d, %y"))
w(paste0(fn, ",", ln, ",", e, ",,,,,,Medium,", d))
} else if(nchar(l) > 0) {
p <- unlist(strsplit(gsub(".*{1,4}\\.\\s", l), " "))
fn <- p[1]
ln <- gsub(",.*", "", p[2])
}
}
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
e <- ""
w <- function(s, append=TRUE) {
cat(paste0(s, "\n"), file = "~/Documents/Business/Real And Present/exported.csv",
append=append)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added", FALSE)
for(l in dat[,1]) {
if(grepl("@", l)) {
e <- l
} else if(grepl("\\w{3,3}\\s\\d{1,2},", l)) {
d <- as.Date(l, tryFormats = c("%b %d, %y"))
w(paste0(fn, ",", ln, ",", e, ",,,,,,Medium,", d))
} else if(nchar(l) > 0) {
p <- unlist(strsplit(gsub(".*{1,4}\\.\\s", l, ""), " "))
fn <- p[1]
ln <- gsub(",.*", "", p[2])
}
}
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
e <- ""
w <- function(s, append=TRUE) {
cat(paste0(s, "\n"), file = "~/Documents/Business/Real And Present/exported.csv",
append=append)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added", FALSE)
for(l in dat[,1]) {
if(grepl("@", l)) {
e <- l
} else if(grepl("\\w{3,3}\\s\\d{1,2},", l)) {
d <- as.Date(l, tryFormats = c("%b %d, %y"))
w(paste0(fn, ",", ln, ",", e, ",,,,,,Medium,", d))
} else if(nchar(l) > 0) {
browser()
p <- unlist(strsplit(gsub(".*{1,4}\\.\\s", l, ""), " "))
fn <- p[1]
ln <- gsub(",.*", "", p[2])
}
}
l
l
l
l
l
l
l
l
l
unlist(strsplit(gsub(".*{1,4}\\.\\s", l, ""), " "))
unlist(strsplit(gsub(".{1,4}\\.\\s", l, ""), " "))
l
gsub(".{1,4}\\.\\s", l, "")
grepl(".{1,4}", l)
grepl(".{1,4}\\.\\s", l)
?gsub
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
e <- ""
w <- function(s, append=TRUE) {
cat(paste0(s, "\n"), file = "~/Documents/Business/Real And Present/exported.csv",
append=append)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added", FALSE)
for(l in dat[,1]) {
if(grepl("@", l)) {
e <- l
} else if(grepl("\\w{3,3}\\s\\d{1,2},", l)) {
d <- as.Date(l, tryFormats = c("%b %d, %y"))
w(paste0(fn, ",", ln, ",", e, ",,,,,,Medium,", d))
} else if(nchar(l) > 0) {
if(grepl(".*{1,4}\\.\\s", l, ""))
l <- gsub(".*{1,4}\\.\\s", l, "")
p <- unlist(strsplit(l, " "))
fn <- p[1]
ln <- gsub(",.*", "", p[2])
}
}
break
dat <- read.delim("~/Documents/Business/Real And Present/subs.txt")
fn <- ""
ln <- ""
d <- ""
e <- ""
w <- function(s, append=TRUE) {
cat(paste0(s, "\n"), file = "~/Documents/Business/Real And Present/exported.csv",
append=append)
}
w("First Name,Last Name,Email,Phone,Address,City,Country,Company,Origin,Date Added", FALSE)
for(l in dat[,1]) {
if(grepl("@", l)) {
e <- l
} else if(grepl("\\w{3,3}\\s\\d{1,2},", l)) {
d <- as.Date(l, tryFormats = c("%b %d, %y"))
w(paste0(fn, ",", ln, ",", e, ",,,,,,Medium,", d))
} else if(nchar(l) > 0) {
if(grepl(".*{1,4}\\.\\s", l, ""))
l <- gsub(".*{1,4}\\.\\s", l, "")
p <- unlist(strsplit(l, " "))
fn <- p[1]
ln <- gsub(",.*", "", p[2])
}
}
source("~/Documents/Business/HFFeedback/src/scripts/load_db.R")
setwd("~/Documents/Business/HFFeedback/src/scripts/")
s <- "../data/schedule.csv"
n <- "../data/resident_key.txt"
sched <- read.csv2(s, sep=",");
names <- read.csv2(n, sep="\t");
ix <- match(sched[,1], names[,1])
unique(names[2,ix])
names
unique(names[ix, 2])
nrow(n)
n
nrow(names)
names
ix
names[which(is.na(ix)),]
sort(sched[,1])
sched <- read.csv2(s, sep=",");
names <- read.csv2(n, sep="\t");
ix <- match(sched[,1], names[,1])
names[which(is.na(ix)),]
sort(unique(sched[,1]))
which(sched[,1] == "Liu, Kev")
which(names[,1] == "Liu, Kev")
ix
sched[which(is.na(ix)),]
sched[which(is.na(ix)),1]
sched <- read.csv2(s, sep=",");
names <- read.csv2(n, sep="\t");
ix <- match(sched[,1], names[,1])
sched[which(is.na(ix)),1]
names[,1]
names <- read.csv2(n, sep="\t", quote="\"");
sched <- read.csv2(s, sep=",");
names <- read.csv2(n, sep="\t", quote="\"");
ix <- match(sched[,1], names[,1])
sched[which(is.na(ix)),1]
names[,1]
sched <- read.csv2(s, sep=",", quote="\"");
names <- read.csv2(n, sep="\t", quote="\"");
ix <- match(sched[,1], names[,1])
sched[which(is.na(ix)),1]
names[,1]
sched <- read.csv2(s, sep=",", quote="\"");
names <- read.csv2(n, sep="\t", quote="\"");
ix <- match(sched[,1], names[,1])
sched[which(is.na(ix)),1]
names[,1]
unique(sched[,1])
sched <- read.csv2(s, sep=",", quote="\"");
names <- read.csv2(n, sep="\t", quote="\"");
ix <- match(sched[,1], names[,1])
sched[which(is.na(ix)),1]
sched <- read.csv2(s, sep=",", quote="\"");
names <- read.csv2(n, sep="\t", quote="\"");
ix <- match(sched[,1], names[,1])
sched[which(is.na(ix)),1]
names[ix,]
sched <- read.csv2(s, sep=",", quote="\"");
names <- read.csv2(n, sep="\t", quote="\"");
ix <- match(sched[,1], names[,1])
sched[,1] <- names[ix,2]
if(sum(is.na(ix)) > 0) {
ix.rm <- which(is.na(ix))
sched <- sched[-ix.rm,]
}
unique(sched[,1])
sched <- sched[,c(1, ncol(sched), 2:(ncol(sched)-1))]
sched
source("~/Documents/Business/HFFeedback/src/scripts/load_db.R")
source("~/Documents/Business/HFFeedback/src/scripts/load_db.R")
cleanRotations(sched[,-c(1,2)])
cleanRotations(sched[, 3])
apply(shched[,-c(1,2)], 1, cleanRotations)
apply(sched[,-c(1,2)], 1, cleanRotations)
sort(unique(unlist(apply(sched[,-c(1,2)], 1, cleanRotations)))
)
sched <- read.csv2(s, sep=",", quote="\"");
names <- read.csv2(n, sep="\t", quote="\"");
ix <- match(sched[,1], names[,1])
sched <- read.csv2(s, sep=",", quote="\"");
names <- read.csv2(n, sep="\t", quote="\"");
ix <- match(sched[,1], names[,1])
sched[,1] <- names[ix,2]
if(sum(is.na(ix)) > 0) {
ix.rm <- which(is.na(ix))
sched <- sched[-ix.rm,]
}
# highly fragile hack to move PGY column to position 2
sched <- sched[,c(1, ncol(sched), 2:(ncol(sched)-1))]
sort(unique(unlist(apply(sched[,-c(1,2)], 1, cleanRotations)))
))
sort(unique(unlist(apply(sched[,-c(1,2)], 1, cleanRotations)))
)
source("~/Documents/Business/HFFeedback/src/scripts/clean.R")
sched <- read.csv2(s, sep=",", quote="\"");
names <- read.csv2(n, sep="\t", quote="\"");
ix <- match(sched[,1], names[,1])
sched[,1] <- names[ix,2]
if(sum(is.na(ix)) > 0) {
ix.rm <- which(is.na(ix))
sched <- sched[-ix.rm,]
}
# highly fragile hack to move PGY column to position 2
sched <- sched[,c(1, ncol(sched), 2:(ncol(sched)-1))]
sort(unique(unlist(apply(sched[,-c(1,2)], 1, cleanRotations)))
)
source("~/Documents/Business/HFFeedback/src/scripts/clean.R")
source("~/Documents/Business/HFFeedback/src/scripts/clean.R")
source("~/Documents/Business/HFFeedback/src/scripts/clean.R")
sched <- read.csv2(s, sep=",", quote="\"");
names <- read.csv2(n, sep="\t", quote="\"");
ix <- match(sched[,1], names[,1])
sched[,1] <- names[ix,2]
if(sum(is.na(ix)) > 0) {
ix.rm <- which(is.na(ix))
sched <- sched[-ix.rm,]
}
# highly fragile hack to move PGY column to position 2
sched <- sched[,c(1, ncol(sched), 2:(ncol(sched)-1))]
sort(unique(unlist(apply(sched[,-c(1,2)], 1, cleanRotations))))
source("~/Documents/Business/HFFeedback/src/scripts/clean.R")
sched
which(sched == "-")
sort(unique(unlist(apply(sched[,-c(1,2)], 1, cleanRotations))))
apply(sched[,-c(1,2)], 1, cleanRotations))
apply(sched[,-c(1,2)], 1, cleanRotations)
which(apply(sched[,-c(1,2)], 1, cleanRotations) == "_")
tt <- apply(sched[,-c(1,2)], 1, cleanRotations)
View(tt)
apply(tt, function(x) { which(x == "-"})
apply(tt, function(x) { which(x == "-")})
sapply(tt, function(x) { which(x == "-")})
unique(tt)
tt <- unlist(apply(sched[,-c(1,2)], 1, cleanRotations))
which(tt == "-")
sort(unique(unlist(apply(sched[,-c(1,2)], 1, cleanRotations))))
sched <- read.csv2(s, sep=",", quote="\"");
names <- read.csv2(n, sep="\t", quote="\"");
ix <- match(sched[,1], names[,1])
sched[,1] <- names[ix,2]
if(sum(is.na(ix)) > 0) {
ix.rm <- which(is.na(ix))
sched <- sched[-ix.rm,]
}
# highly fragile hack to move PGY column to position 2
sched <- sched[,c(1, ncol(sched), 2:(ncol(sched)-1))]
sort(unique(unlist(apply(sched[,-c(1,2)], 1, cleanRotations))))
source("~/Documents/Business/HFFeedback/src/scripts/load_db.R")
dir()
source("~/Documents/Business/HFFeedback/src/scripts/load_db.R")
mat <- loadFromCSV(s,n)
processMatrix(mat)
source("~/Documents/Business/HFFeedback/src/scripts/load_db.R")
processMatrix(mat)
dotenv::load_dot_env()
env()
Sys.getenv("SUPABASE_URL")
Sys.getenv("SUPABASE_API_KEY")
dotenv::load_dot_env()
Sys.getenv("SUPABASE_API_KEY")
dotenv::load_dot_env()
Sys.getenv("SUPABASE_API_KEY")
processMatrix(mat)
